* JS
- =node.js dependencies=
- [[file:atom/package.json::"main":%20"./lib/main",]["main"]]: "./lib/main" @ luna-studio/frontend/atom/package.json
  - [[file:atom/lib/main.coffee::(require%20'./luna-visualizers')()][(require]] './luna-visualizers')()
    - [[file:atom/lib/luna-visualizers.coffee::module.exports%20=%20()%20->][module.exports]] = () ->
      window.getInternalVisualizersPath = () -> lunaBaseVisPath
      window.getInternalVisualizers = () -> 
          internalVisualizers = getVisualizersForPath lunaBaseVisPath, internalVisName
          internalVisualizers
      window.getLunaVisualizersPath = () -> lunaVisPath
      window.getLunaVisualizers     = () ->
          lunaVisualizers = getVisualizersForPath lunaVisPath
          lunaVisualizers
      window.getProjectVisualizers = (path) ->
          projectVisualizers = getVisualizersForPath path
          projectVisualizers
      window.getImportedVisualizers = (libName, path) ->
          importedVisualizers[libName] = getVisualizersForPath path
          importedVisualizers[libName]
      window.checkInternalVisualizer = (name)                  -> internalVisualizers[name]()
      window.checkLunaVisualizer     = (name, tpeRep)          -> lunaVisualizers[name](tpeRep)
      window.checkProjectVisualizer  = (name, tpeRep)          -> projectVisualizers[name](tpeRep)
      window.checkImportedVisualizer = (libName, name, tpeRep) -> importedVisualizers[libName][name](tpeRep)
  - [[file:atom/lib/main.coffee::codeEditor%20=%20(require%20'./gen/text-editor-ghcjs.js')()][codeEditor]] = (require './gen/text-editor-ghcjs.js')()
    - [[file:text-editor/env-text-editor.ghcjs::atomCallbackTextEditor%20=%20require('./atom-callback-text-editor');][atomCallbackTextEditor]] = require('./atom-callback-text-editor');
    - [[file:text-editor/env-text-editor.ghcjs::globalRegistry%20=%20{};][globalRegistry]] = {}
    - var [[file:text-editor/env-text-editor.ghcjs::var%20run%20=%20function()%20{][run]] = function() {
                    =======================================================
                    GHCJS_CODE_BE_THERE
                  };
    - [[file:text-editor/env-text-editor.ghcjs::return%20{%20connect%20:%20function(connector)%20{%20connector(globalRegistry);%20}][return]]
      { connect            :fn(connector) { connector(globalRegistry); }
      , start              :fn()          { run();}
      , lex                :fn(stack, data) { return atomCallbackTextEditor.lex(stack, data); }
      , onInsertCode       :fn(callback)  { atomCallbackTextEditor.onInsertCode(callback); }
      , onInterpreterUpdate:fn(callback)  { atomCallbackTextEditor.onInterpreterUpdate(callback); }
      , onSetBuffer        :fn(callback)  { atomCallbackTextEditor.onSetBuffer(callback); }
      , onSetClipboard     :fn(callback)  { atomCallbackTextEditor.onSetClipboard(callback); }
      , pushDiffs          :fn(diffs)     { atomCallbackTextEditor.pushDiffs(diffs); }
      , pushInternalEvent  :fn(data)      { atomCallbackTextEditor.pushInternalEvent(data); }
      , onStatus           :fn(callback)  { atomCallbackTextEditor.onStatus(callback); }
      }
  - [[file:atom/lib/main.coffee::nodeEditor%20=%20(require%20'./gen/node-editor-ghcjs.js')()][nodeEditor]] = (require './gen/node-editor-ghcjs.js') @ frontend/atom/lib/main.coffee
    - .start .connector .onNotification .pushEvent .setEventFilter .onExpectedEvent
    - prepare_ghcjs([[file:~/luna-studio/scripts_build/atom_prepare.py::prepare_ghcjs('../frontend/atom/lib/gen/node-editor-ghcjs.js',%20'../frontend/node-editor/env-node-editor.ghcjs',%20node_editor_js%5B0%5D)]['../frontend/atom/lib/gen/node-editor-ghcjs.js']],
                    '../frontend/node-editor/env-node-editor.ghcjs', ..) @ atom-prepare.py
      - [[file:node-editor/env-node-editor.ghcjs::atomCallback%20=%20require('./atom-callback'),][atomCallback]] = require('./atom-callback'), @ frontend/node-editor/env-node-editor.ghcjs
        - [[file:node-editor/js/atom-callback.coffee::listeners%20=][listeners]] =
            onEvent: []
            onNotification: []
        - [[file:node-editor/js/atom-callback.coffee::globalRegistry%20=%20null][globalRegistry]] = null
        - [[file:node-editor/js/atom-callback.coffee::eventFilters%20=][eventFilters]] =
            blockedEvents: []
            allowedEvents: []
            expectedEvents: []
        - module.exports =
          - [[file:node-editor/js/atom-callback.coffee::onEvent:%20(listener)%20=>%20listeners.onEvent.push%20listener][onEvent]] @ atom-callback.coffee
      - var [[file:node-editor/env-node-editor.ghcjs::var%20run%20=%20function(maybe_url,%20maybe_mountPoint,%20websocket)%20{][run]] = function(maybe_url, maybe_mountPoint, websocket) {
                    var arg_url   = function() { return maybe_url; };
                    var arg_mount = function() { return maybe_mountPoint; };
                  ==========================================================
                  GHCJS_CODE_BE_THERE
                }
    - [[file:node-editor/env-node-editor.ghcjs::return%20{%20start:%20run][return]]
      { [[file:node-editor/env-node-editor.ghcjs::return%20{%20start:%20run][start]]          : [[file:node-editor/env-node-editor.ghcjs::var%20run%20=%20function(maybe_url,%20maybe_mountPoint,%20websocket)%20{][run]]
      , [[file:node-editor/env-node-editor.ghcjs::,%20connector:%20atomCallback.connector][connector]]      : atomCallback.[[file:node-editor/js/atom-callback.coffee::connector:%20(otherGlobal)%20=>%20globalRegistry%20=%20otherGlobal][connector]]
      , onNotification : atomCallback.[[file:node-editor/js/atom-callback.coffee::onNotification:%20(listener)%20=>%20listeners.onNotification.push%20listener][onNotification]]
      , pushEvent      : atomCallback.[[file:node-editor/js/atom-callback.coffee::pushEvent:%20(data)%20=>][pushEvent]]
      , setEventFilter : atomCallback.[[file:node-editor/js/atom-callback.coffee::setEventFilter:%20(blocked,%20allowed,%20expected)%20=>][setEventFilter]]
      , onExpectedEvent: atomCallback.[[file:node-editor/js/atom-callback.coffee::onExpectedEvent:%20(callback)%20=>%20listeners.onExpectedEvent%20=%20callback][onExpectedEvent]]
      }
    - class [[file:atom/lib/main.coffee::class%20LunaStudio][LunaStudio]]
      - [[file:atom/lib/main.coffee::activate:%20(state)%20=>][activate]]
        - [[file:atom/lib/main.coffee::atom.workspace.addOpener%20(uri)%20=>%20@lunaOpener%20uri][atom.workspace.addOpener]] (uri) => @lunaOpener uri
        - [[file:atom/lib/main.coffee::codeEditor.connect%20nodeEditor.connector][codeEditor.connect]] nodeEditor.connector
          - [[file:text-editor/env-text-editor.ghcjs::return%20{%20connect%20:%20function(connector)%20{%20connector(globalRegistry);%20}][connect]] : function(connector) { connector(globalRegistry); }
        - [[file:atom/lib/main.coffee::nodeEditor.onNotification%20report.onNotification][nodeEditor.onNotification]] report.onNotification
        - [[file:atom/lib/main.coffee::actStatus%20=%20(act,%20arg0,%20arg1)%20=>][actStatus]] = (act, arg0, arg1) => switch act
          - [[file:atom/lib/main.coffee::when%20'Init'][when]] Init
                      rootPath = atom.project.getPaths().shift()
                      if rootPath? and rootPath != ""
                          @projects.addRecent rootPath
                          codeEditor.pushInternalEvent(tag: "SetProject", _path: rootPath)
          - [[file:atom/lib/main.coffee::when%20'ProjectCreated'][when]] ProjectCreated
          - [[file:atom/lib/main.coffee::when%20'ProjectSet'][when]] ProjectSet
          - [[file:atom/lib/main.coffee::when%20'FileOpened'][when]] FileOpened
          - [[file:atom/lib/main.coffee::when%20'ProjectMove'][when]] ProjectMove
        - [[file:atom/lib/main.coffee::codeEditor.onStatus%20actStatus][codeEditor.onStatus]] actStatus
        - atom.workspace.onDidChangeActivePaneItem (item) => @handleItemChange item
          atom.workspace.onDidDestroyPaneItem (event) => @handleItemDestroy event
          atom.workspace.observeTextEditors (editor) =>
              @handleSaveAsLuna editor
          atom.workspace.onDidAddPaneItem (pane) => @handleItemChange pane.item
          atom.project.onDidChangePaths (projectPaths) => @handleProjectPathsChange projectPaths
          atom.workspace.open(LUNA_STUDIO_URI,
               {split: atom.config.get('luna-studio.preferredNodeEditorPosition')})
          atom.commands.add 'atom-workspace',
              'application:add-project-folder': @projects.selectLunaProject
              'application:open':               @projects.selectLunaProject
              'application:open-folder':        @projects.selectLunaProject
          atom.commands.add 'body',
              'luna-studio:welcome': => @welcome.attach()
              'luna-studio:guide':   => @guide.start()
              'core:cancel': => @welcome.cancel()
          atom.packages.onDidActivateInitialPackages =>
              @toolbar.attach()
              atom.reopenProjectMenuManager.open = @projects.openLunaProject
              openTemporaryProject = => @projects.createProject()
              resetProjects = atom.config.get('luna-studio.resetProjects') and atom.project.getPaths().length == 0
              if atom.config.get('luna-studio.showWelcomeScreen') and atom.project.getPaths().length == 0
                  @welcome.attach()
                  if resetProjects
                      @welcome.onCancel = openTemporaryProject
              else if resetProjects
                  openTemporaryProject()
              if atom.config.get('luna-studio.showWelcomeGuide')
                  @guide.start()
      - [[file:atom/lib/main.coffee::codeEditor.start()][codeEditor.start()]] → [[file:text-editor/env-text-editor.ghcjs::,%20start%20:%20function()%20{%20run();}][start]] → [[file:text-editor/env-text-editor.ghcjs::var%20run%20=%20function()%20{][run]] → GHCJS(CodeEditor.main)
        ========================================================================
    - [[file:atom/lib/main.coffee::lunaOpener:%20(uri)%20=>][lunaOpener]]: (uri)
      => new [[file:atom/lib/main.coffee::new%20LunaNodeEditorTab%20null,%20nodeEditor,%20codeEditor,%20@projects][LunaNodeEditorTab]] null, nodeEditor, codeEditor, @projects
    - [[file:atom/lib/main.coffee::setNodeEditorUri:%20(uri)%20->][setNodeEditorUri]]: (uri) ->
        nodeEditorTab = @getNodeEditorTab()
        nodeEditorTab.uri = uri if nodeEditorTab?
        if uri?
            nodeEditor.pushEvent(tag: "SetFile", path: uri)
        else
            nodeEditor.pushEvent(tag: "UnsetFile")
* 
  - [[file:node-editor/js/app.js:://%20Generated%20by%20CoffeeScript%201.12.7][frontend/node-editor/js/app.js]]
      window.visualizerFramesManager = require('./visualizers')
      window.searcherEngine          = require('fuzzly')
      window.processedEvents = []
  - [[file:atom/lib/main.js:://%20Generated%20by%20CoffeeScript%201.12.7][frontend/atom/lib/main.js]] ← [[file:atom/lib/main.coffee][frontend/atom/lib/main.coffee]]
    - [[file:atom/lib/main.coffee::(require%20'./luna-visualizers')()][(require]] './luna-visualizers')()
      - [[file:atom/lib/luna-visualizers.js::module.exports%20=%20function()%20{][luna-visualizers.js]] ← [[file:atom/lib/luna-visualizers.coffee::module.exports%20=%20()%20->][../../atom/lib/luna-visualizers.coffee]]
* 
  - [[file:node-editor/Makefile::all:][Makefile]] -[[file:node-editor/node-editor.cabal::executable%20node-editor][node-editor.cabal]]→ [[file:~/luna-studio/dist-newstyle/build/x86_64-linux/ghcjs-8.6.0.1/node-editor-0.1.0.0/x/node-editor/build/node-editor/node-editor.jsexe/index.html::<!DOCTYPE%20html>][index.html]]
  - [[file:node-editor/js/lib-suffix-static.js::var%20process%20=%20{][frontend/node-editor/js/lib-suffix-static.js]]
  - [[file:node-editor/js/pre-browserified.js::PRE-BROWSERIFIED][frontend/node-editor/js/pre-browserified.js]] -[[file:node-editor/run-browserify.js:://%20EOF][run-browserify.js]]→ [[file:node-editor/js/browserified.js::require('react');][node-editor/js/browserified.js]]
  - [[file:node-editor/js/rollup.js::import][frontend/node-editor/js/rollup.js]] → [[file:node-editor/js/rollup.out.js::module.exports%20=%20rollup;][node-editor/js/rollup.out.js]]
    - ./node_modules/coffee-script/bin/coffee --compile [[file:node-editor/js/atom-callback.coffee::module.exports%20=][js/atom-callback.coffee]] → [[file:node-editor/js/atom-callback.js:://%20Generated%20by%20CoffeeScript%201.12.7][atom-callback.js]]
      - [[file:node-editor/js/atom-callback.js::listeners%20=%20{][listeners]] = { [[file:node-editor/js/atom-callback.js::onEvent:%20%5B%5D,][onEvent]] = [], [[file:node-editor/js/atom-callback.js::onNotification:%20%5B%5D][onNotification]] = [] }
      - [[file:node-editor/js/atom-callback.js::globalRegistry%20=%20null;][globalRegistry]] = null
      - [[file:node-editor/js/atom-callback.js::eventFilters%20=%20{][eventFilters]] = { [[file:node-editor/js/atom-callback.js::blockedEvents:%20%5B%5D,][blockedEvents]] = [], [[file:node-editor/js/atom-callback.js::allowedEvents:%20%5B%5D,][allowedEvents]] = [], [[file:node-editor/js/atom-callback.js::expectedEvents:%20%5B%5D][expectedEvents]] = [] }
      - [[file:node-editor/js/atom-callback.js::setEventFilter:%20(function(_this)%20{][setEventFilter]](blocked, allowed, expected)
      - [[file:node-editor/js/atom-callback.js::acceptEvent:%20(function(_this)%20{][acceptEvent]](event)
    - ./node_modules/coffee-script/bin/coffee --compile [[file:atom/lib/luna-visualizers.js::module.exports%20=%20function()%20{][luna-visualizers.js]] ← [[file:atom/lib/luna-visualizers.coffee::module.exports%20=%20()%20->][../../atom/lib/luna-visualizers.coffee]]
    - ./node_modules/rollup/bin/rollup -c  # [[file:node-editor/rollup.config.js::export%20default%20{][rollup.config.js]]
  - [[file:node-editor/js/lib-suffix-dynamic.suffix.js:://%20entry][js/lib-suffix-dynamic.suffix.js]] → [[file:node-editor/js/lib-suffix-dynamic.js:://%20EOF][js/lib-suffix-dynamic.js]]
  - (GHCJS, [[file:node-editor/js/lib-suffix-dynamic.js:://%20EOF][js/lib-suffix-dynamic.js]], [[file:node-editor/js/lib-suffix-static.js::var%20process%20=%20{][js/lib-suffix-static.js]]) → [[file:~/luna-studio/dist-newstyle/build/x86_64-linux/ghcjs-8.6.0.1/node-editor-0.1.0.0/x/node-editor/build/node-editor/node-editor.jsexe/lib.js::var%20nodeModulesPaths%20=%20require('./node-modules-paths.js');][lib.js]]
  - [[file:node-editor/src/Main.hs::main%20::%20IO%20()][main]]
    - [[file:node-editor/src/Main.hs::runApp%20::%20Chan%20(IO%20())%20->%20WebSocket%20->%20IO%20()][runApp]]
      - NodeEditor.Event.Processor.[[file:node-editor/src/NodeEditor/Event/Processor.hs::scheduleInit%20::%20LoopRef%20->%20IO%20()][scheduleInit]]
        - NodeEditor.Event.Processor.[[file:node-editor/src/NodeEditor/Event/Processor.hs::processEvent%20::%20LoopRef%20->%20Event%20->%20IO%20()][processEvent]]
          - [[file:node-editor/src/NodeEditor/Event/Processor.hs::preprocessEvent%20::%20Event%20->%20IO%20Event][preprocessEvent]]
          - NodeEditor.Event.Filter.[[file:node-editor/src/NodeEditor/Event/Filter.hs::filterEvents%20::%20State%20->%20Event%20->%20IO%20State%20->%20IO%20State][filterEvents]]
            - [[file:node-editor/js/atom-callback.js::acceptEvent:%20(function(_this)%20{][acceptEvent]](event)
          - [[file:node-editor/src/NodeEditor/Handler/App.hs::handle%20::%20Event%20->%20Maybe%20(Command%20Global.State%20())][handle]] ∷ Event -> Maybe (Command Global.State ())
            - [[file:node-editor/src/NodeEditor/Handler/App.hs::play%20::%20Command%20Global.State%20()][play]]
              - [[file:node-editor/src/NodeEditor/Action/Basic/CreateGraph.hs::updateWithAPIGraph%20p%20g%20=%20updateGraph%20nodes%20input%20output%20conns%20monads%20imports][updateWithAPIGraph]]
                - [[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::setGraphStatus%20::%20GraphStatus%20->%20Command%20State%20()][setGraphStatus]]
                - [[file:node-editor/src/NodeEditor/Action/Basic/CreateGraph.hs::updateGraph%20::%20%5BExpressionNode%5D%20->%20Maybe%20InputNode%20->%20Maybe%20OutputNode][updateGraph]]
            - [[file:node-editor/src/NodeEditor/Action/Basic/Atom.hs::setFile%20::%20FilePath%20->%20Command%20State%20()][setFile]] ∷ FilePath -> Command State ()
              - [[file:node-editor/src/NodeEditor/Action/Basic/ProjectManager.hs::loadGraph%20::%20GraphLocation%20->%20Maybe%20(GraphLocation,%20LocationSettings)%20->%20Bool%20->%20Command%20State%20()][loadGraph]] ∷ GraphLocation -> Maybe (GraphLocation, LocationSettings) -> Bool -> Command State ()
                - resetGraph
                - modifyNodeEditor $ visualizersLibPaths .= visLibPaths
                - setGraphStatus GraphLoading
                - [[file:node-editor/src/NodeEditor/Action/State/App.hs::modifyApp%20::%20Monad.State%20App%20r%20->%20Command%20State%20r][modifyApp]] $ workspace . _Just . currentLocation .= location
                - Atom.setActiveLocation location
                - Batch.getProgram prevSettings retrieveLocation
          - Common.Action.Command.[[file:lib/src/Common/Action/Command.hs::execCommand%20::%20Command%20a%20b%20->%20a%20->%20IO%20a][execCommand]]
      - NodeEditor.React.View.App.[[file:node-editor-view/src/NodeEditor/React/View/App.hs::focus%20::%20MonadIO%20m%20=>%20m%20()][focus]]
        - JS.UI.[[file:node-editor-view/src/JS/UI.hs::focus%20::%20MonadIO%20m%20=>%20JSString%20->%20m%20()][focus]] JS.Scene.[[file:node-editor-view/src/JS/Scene.hs::appId%20::%20JSString][appId]]
          - foreign import javascript safe "[[file:node-editor-view/src/JS/UI.hs::foreign%20import%20javascript%20safe%20"document.getElementById($1).focus()"%20focus'%20::%20JSString%20->%20IO%20()][document.getElementById($1).focus()]]" focus'
  - API
    - NodeEditor.Action.State.NodeEditor.[[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::updateVisualizationsForNode%20::%20NodeLoc%20->%20Command%20State%20%5BVisualizationId%5D][updateVisualizationsForNode]]
      - NodeEditor.Action.State.NodeEditor.[[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::setPlaceholderVisualization%20::%20NodeLoc%20->%20Command%20State%20%5BVisualizationId%5D][setPlaceholderVisualization]]
        - NodeEditor.Action.State.NodeEditor.[[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::getPlaceholderVisualizer%20::%20Command%20State%20(Maybe%20Visualizer)][getPlaceholderVisualizer]]
          - [[file:node-editor/src/NodeEditor/State/Global.hs::,%20_internalVisualizers%20::%20Map%20VisualizerId%20VisualizerPath][_internalVisualizers]] ∷ Map VisualizerId VisualizerPath
        - warning "Visualization unavailable. Cannot find visualizer."
    - NodeEditor.State
      - [[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::updateVisualizers%20::%20ExternalVisualizers%20FilePath%20->%20Command%20State%20()][updateVisualizers]] ∷ ExternalVisualizers FilePath -> Command State ()
        - ← applyModification.[[file:node-editor/src/NodeEditor/Handler/Backend/Graph.hs::SetExternalVisPath%20m%20->][SetExternalVisPath]]
        - JS.Visualizers.[[file:node-editor/src/JS/Visualizers.hs::getInternalVisualizersLibraryPath%20::%20IO%20FilePath][getInternalVisualizersLibraryPath]]
          - [[file:atom/lib/luna-visualizers.js::window.getInternalVisualizersPath%20=%20function()%20{][window.getInternalVisualizersPath]]
            - [[file:atom/lib/luna-visualizers.js::lunaBaseVisPath%20=%20path.join(__dirname,%20'visualizers');][lunaBaseVisPath]] = path.join(__dirname, 'visualizers');
        - JS.Visualizers.[[file:node-editor/src/JS/Visualizers.hs::mkInternalVisualizersMap%20::%20IO%20(Map%20String%20String)][mkInternalVisualizersMap]]
          - [[file:node-editor/src/JS/Visualizers.hs::getInternalVisualizers%20::%20IO%20%5BString%5D][getInternalVisualizers]]
            - [[file:atom/lib/luna-visualizers.js::window.getInternalVisualizers%20=%20function()%20{][window.getInternalVisualizers]]
              - [[file:atom/lib/luna-visualizers.js::getVisualizersForPath%20=%20function(path,%20name)%20{][getVisualizersForPath]]
    - [[file:node-editor/src/NodeEditor/State/Global.hs::module%20NodeEditor.State.Global%20where][NodeEditor.State.Global]]
      - data [[file:node-editor/src/NodeEditor/State/Global.hs::data%20State%20=%20State][State]]
        - [[file:node-editor/src/NodeEditor/State/Global.hs::,%20_internalVisualizers%20::%20Map%20VisualizerId%20VisualizerPath][_internalVisualisers]] ∷ Map VisualizerId VisualizerPath
    - [[file:node-editor/src/NodeEditor/Action/Camera.hs::module%20NodeEditor.Action.Camera][NodeEditor.Action.Camera]]
      - NodeEditor.Action
        - Basic (centerGraph, resetCamera)
        - Camera.Pan (panCamera, panDown, panDrag, panLeft, panRight, panUp, resetPan, startPanDrag, stopPanDrag)
    - [[file:node-editor/src/NodeEditor/Action/Connect.hs::module%20NodeEditor.Action.Connect][NodeEditor.Action.Connect]]
      - [[file:node-editor/src/NodeEditor/Action/Connect.hs::startConnecting%20::%20ScreenPosition%20->%20AnyPortRef%20->%20Maybe%20ConnectionId%20->%20Bool][startConnecting]]
      - [[file:node-editor/src/NodeEditor/Action/Connect.hs::handleMove%20::%20MouseEvent%20->%20Connect%20->%20Command%20State%20()][handleMove]]
      - [[file:node-editor/src/NodeEditor/Action/Connect.hs::handleConnectionMouseDown%20::%20MouseEvent%20->%20ConnectionId%20->%20ModifiedEnd][handleConnectionMouseDown]]
      - [[file:node-editor/src/NodeEditor/Action/Connect.hs::handlePortMouseUp%20::%20AnyPortRef%20->%20Connect%20->%20Command%20State%20()][handlePortMouseUp]] [[file:node-editor/src/NodeEditor/Action/Connect.hs::handleMouseUp%20::%20MouseEvent%20->%20Connect%20->%20Command%20State%20()][handleMouseUp]]
      - [[file:node-editor/src/NodeEditor/Action/Connect.hs::snapToPort%20::%20AnyPortRef%20->%20Connect%20->%20Command%20State%20()][snapToPort]] [[file:node-editor/src/NodeEditor/Action/Connect.hs::connectToPort%20::%20AnyPortRef%20->%20Connect%20->%20Command%20State%20()][connectToPort]]
    - [[file:node-editor/src/NodeEditor/Action/Port.hs::module%20NodeEditor.Action.Port][NodeEditor.Action.Port]]
    - [[file:node-editor/src/NodeEditor/Action/Searcher.hs::module%20NodeEditor.Action.Searcher%20where][NodeEditor.Action.Searcher]]
    - [[file:node-editor/src/NodeEditor/Action/Visualization.hs::module%20NodeEditor.Action.Visualization%20where][NodeEditor.Action.Visualization]]
    - [[file:node-editor/src/NodeEditor/Handler/App.hs::module%20NodeEditor.Handler.App][NodeEditor.Handler.App]]
      - [[file:node-editor/src/NodeEditor/Handler/App.hs::handle%20::%20Event%20->%20Maybe%20(Command%20Global.State%20())][handle]]
        - NodeEditor.Action.Basic.Atom.[[file:node-editor/src/NodeEditor/Action/Basic/Atom.hs::setFile%20::%20FilePath%20->%20Command%20State%20()][setFile]]
          - NodeEditor.Action.Basic.ProjectManager.[[file:node-editor/src/NodeEditor/Action/Basic/ProjectManager.hs::loadGraph%20::%20GraphLocation%20->%20Maybe%20(GraphLocation,%20LocationSettings)%20->%20Bool%20->%20Command%20State%20()][loadGraph]]
            - NodeEditor.Action.Batch.[[file:node-editor/src/NodeEditor/Action/Batch.hs::getProgram%20::%20Maybe%20(GraphLocation,%20LocationSettings)%20->%20Bool%20->%20Command%20State%20()][getProgram]]
    - [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Breadcrumb.hs::module%20LunaStudio.Data.Breadcrumb%20where][LunaStudio.Data.Breadcrumb]]
      - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Breadcrumb.hs::data%20BreadcrumbItem][BreadcrumbItem]]
      - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Breadcrumb.hs::newtype%20Breadcrumb%20a%20=%20Breadcrumb][Breadcrumb]]
    - [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/NodeLoc.hs::module%20LunaStudio.Data.NodeLoc][LunaStudio.Data.NodeLoc]]
      - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/NodeLoc.hs::data%20NodePath%20=%20NodePath][NodePath]]
      - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/NodeLoc.hs::data%20NodeLoc%20=%20NodeLoc][NodeLoc]]
    - [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Node.hs::module%20LunaStudio.Data.Node][LunaStudio.Data.Node]]
      - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Node.hs::data%20Node][Node]]
      - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Node.hs::data%20ExpressionNode%20=%20ExpressionNode][ExpressionNode]]
      - [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Node.hs::mkExprNode%20::%20NodeId%20->%20Text%20->%20Position%20->%20ExpressionNode][mkExprNode]] ∷ NodeId -> Text -> Position -> ExpressionNode
      - [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Position.hs::fromTuple%20::%20(Double,%20Double)%20->%20Position][fromTuple]] ∷ (Double, Double) -> Position
      - NodeId ≡ UUID
    - [[file:node-editor/src/NodeEditor/Handler/Backend/Graph.hs::module%20NodeEditor.Handler.Backend.Graph][NodeEditor.Handler.Backend.Graph]]
      - [[file:node-editor/src/NodeEditor/Handler/Backend/Graph.hs::handle%20::%20Event.Event%20->%20Maybe%20(Command%20State%20())][handle]]
        - [[file:node-editor/src/NodeEditor/Handler/Backend/Graph.hs::AddNodeResponse%20response%20->%20handleResponse%20response%20success%20failure%20where][AddNodeResponse]] (data [[file:node-editor/src/NodeEditor/Event/Batch.hs::data%20Event%20=%20UnknownEvent%20String][Event]]) [[file:node-editor/src/NodeEditor/Event/Batch.hs::|%20AddNodeResponse%20(ResponseOf%20AddNode.Request)][AddNodeResponse]] [[file:~/luna-studio/common/api-definition/src/LunaStudio/API/Graph/AddNode.hs::data%20Request%20=%20Request][AddNode.Request]]
          - type [[file:~/luna-studio/common/api-definition/src/LunaStudio/API/Response.hs::type%20ResponseOf%20req%20=%20Response%20req%20(InverseOf%20req)%20(ResultOf%20req)][ResponseOf]] req = Response req (InverseOf req) (ResultOf req)
          - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/API/Response.hs::data%20Response%20req%20inv%20res%20=%20Response][Response]]   req inv res
                                { _requestId :: UUID
                                , _guiID     :: Maybe UUID
                                , _request   :: req
                                , _inverse   :: Status inv
                                , _status    :: Status res
                                }
          - [[file:node-editor/src/NodeEditor/Handler/Backend/Graph.hs::applyDiff%20::%20GraphLocation%20->%20Set%20NodeUpdateModification%20->%20Diff][applyDiff]]
            - [[file:node-editor/src/NodeEditor/Handler/Backend/Graph.hs::applyModification%20p%20nm%20=%20\case][applyModification]] [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Diff.hs::data%20Modification][data Modification]].[[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Diff.hs::data%20ModificationAddNode%20=%20ModificationAddNode][ModificationAddNode]]
              - data [[file:~/luna-studio/common/api-definition/src/LunaStudio/Data/Node.hs::data%20ExpressionNode%20=%20ExpressionNode][ExpressionNode]]
                - { _exprNodeId       :: NodeId
                  , _expression       :: Text
                  , _isDefinition     :: Bool
                  , _name             :: Maybe Text
                  , _code             :: Text
                  , _inPorts          :: InPortTree  InPort
                  , _outPorts         :: OutPortTree OutPort
                  , _nodeMeta         :: NodeMeta
                  , _canEnter         :: Bool
                  }
              - NodeEditor.Action.Basic.UpdateNode.[[file:node-editor/src/NodeEditor/Action/Basic/UpdateNode.hs::localUpdateOrAddExpressionNode%20::%20Set%20NodeUpdateModification%20->%20ExpressionNode][localUpdateOrAddExpressionNode]]
                - NodeEditor.Action.Basic.AddNode.[[file:node-editor/src/NodeEditor/Action/Basic/AddNode.hs::localAddExpressionNode%20::%20ExpressionNode%20->%20Command%20State%20()][localAddExpressionNode]]
                  - NodeEditor.Action.State.NodeEditor.[[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::addExpressionNode%20::%20ExpressionNode%20->%20Command%20State%20()][addExpressionNode]]
                    - [[file:node-editor/src/NodeEditor/Action/State/Internal/NodeEditor.hs::addNodeRec%20::%20Lens'%20NodeEditor%20(HashMap%20NodeId%20n)%20->%20Lens'%20ExpressionNode.Subgraph%20(HashMap%20NodeId%20n)%20->%20NodeLoc%20->%20n%20->%20Command%20State%20()][addNodeRec]]
                      - [[file:node-editor/src/NodeEditor/Action/State/Internal/NodeEditor.hs::modifyNodeRec'%20::%20Monoid%20r%20=>%20(NodeId%20->%20Command%20State%20r)%20->%20(NodeId%20->%20M.State%20ExpressionNode.Subgraph%20r)%20->%20NodeLoc%20->%20Command%20State%20r][modifyNodeRec']]
                  - [[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::setVisualizationData%20::%20NodeLoc%20->%20VisualizationBackup%20->%20Bool][setVisualizationData]]
                    - NodeEditor.Action.State.NodeEditor.[[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::updateVisualizationsForNode%20::%20NodeLoc%20->%20Command%20State%20%5BVisualizationId%5D][updateVisualizationsForNode]]
                      - NodeEditor.Action.State.NodeEditor.[[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::setPlaceholderVisualization%20::%20NodeLoc%20->%20Command%20State%20%5BVisualizationId%5D][setPlaceholderVisualization]]
                        - [[file:node-editor/src/NodeEditor/Action/State/NodeEditor.hs::getPlaceholderVisualizer%20::%20Command%20State%20(Maybe%20Visualizer)][getPlaceholderVisualizer]]
                  - updateNodeVisualizers
                  - focusNode
  - holes (inverse)
    - [[file:lib/src/WebSocket.hs::getWebSocket%20::%20IO%20WebSocket][getWebSocket]] = foreign import javascript safe "init.websocket"
      - [[file:lib/src/Common/Batch/Connector/Connection.hs::sendMessages%20msgs%20=%20liftIO%20$%20do][sendMessages]]
        - [[file:lib/src/Common/Batch/Connector/Connection.hs::sendMessage%20::%20MonadIO%20m%20=>%20WebMessage%20->%20m%20()][sendMessage]]
          - [[file:lib/src/Common/Batch/Connector/Connection.hs::sendRequest%20::%20(MonadIO%20m,%20BinaryRequest%20a)%20=>%20Message%20a%20->%20m%20()][sendRequest]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::createLibrary%20::%20Text%20->%20Text%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][createLibrary]] NodeEditor.Batch.Connector.Commands
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::listLibraries%20::%20ProjectId%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][listLibraries]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::openFile%20::%20FilePath%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][openFile]]
              - NodeEditor.Action.Batch.[[file:node-editor/src/NodeEditor/Action/Batch.hs::openFile%20::%20FilePath%20->%20Command%20State%20()][openFile]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::dumpGraphViz%20::%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][dumpGraphViz]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::getProgram%20::%20Maybe%20(GraphLocation,%20LocationSettings)%20->%20Bool%20->%20Workspace][getProgram]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::addConnection%20::%20Either%20OutPortRef%20NodeLoc%20->%20Either%20AnyPortRef%20NodeLoc][addConnection]]
              - NodeEditor.Action.Batch.[[file:node-editor/src/NodeEditor/Action/Batch.hs::addConnection%20::%20Either%20OutPortRef%20NodeLoc%20->%20Either%20AnyPortRef%20NodeLoc][addConnection]]
                - NodeEditor.Action.Basic.AddConnection.[[file:node-editor/src/NodeEditor/Action/Basic/AddConnection.hs::connect%20src'@(Left%20srcPortRef)%20(Left%20dstPortRef)][connect]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::addImports%20::%20Set%20Library.Name%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][addImports]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::addNode%20::%20NodeLoc%20->%20Text%20->%20NodeMeta%20->%20Maybe%20NodeLoc%20->%20Workspace%20->%20UUID][addNode]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::addPort%20::%20OutPortRef%20->%20Maybe%20InPortRef%20->%20Maybe%20Text%20->%20Workspace%20->%20UUID][addPort]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::addSubgraph%20::%20%5BExpressionNode%5D%20->%20%5BConnection%5D%20->%20Workspace%20->%20UUID][addSubgraph]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::autolayoutNodes%20::%20%5BNodeLoc%5D%20->%20Bool%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][autolayoutNodes]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::collapseToFunction%20::%20%5BNodeLoc%5D%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][collapseToFunction]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::copy%20::%20%5BNodeLoc%5D%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][copy]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::getSubgraph%20::%20NodeLoc%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][getSubgraph]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::movePort%20::%20OutPortRef%20->%20Int%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][movePort]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::paste%20::%20Position%20->%20String%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][paste]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::redo%20::%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][redo]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::removeConnection%20::%20ConnectionId%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][removeConnection]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::removeNodes%20::%20%5BNodeLoc%5D%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][removeNodes]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::removePort%20::%20OutPortRef%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][removePort]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::renameNode%20::%20NodeLoc%20->%20Text%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][renameNode]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::renamePort%20::%20OutPortRef%20->%20Text%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][renamePort]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::saveSettings%20::%20LocationSettings%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][saveSettings]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::searchNodes%20::%20Set%20Library.Name%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][searchNodes]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::setNodeExpression%20::%20NodeLoc%20->%20Text%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][setNodeExpression]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::setNodesMeta%20::%20Map%20NodeLoc%20NodeMeta%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][setNodesMeta]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::setNodesMetaRequest%20::%20Map%20NodeLoc%20NodeMeta%20->%20Workspace%20->%20SetNodesMeta.Request][setNodesMetaRequest]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::setPortDefault%20::%20InPortRef%20->%20PortDefault%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID][setPortDefault]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::undo%20::%20UUID%20->%20Maybe%20UUID%20->%20IO%20()][undo]]
            - [[file:node-editor/src/NodeEditor/Action/Basic.hs::moveNodeOnConnection%20::%20NodeLoc%20->%20Connection%20->%20Map%20NodeLoc%20Position%20->%20Command%20State%20()][moveNodeOnConnection]]
          - [[file:lib/src/Common/Batch/Connector/Connection.hs::sendUpdate%20::%20(MonadIO%20m,%20BinaryMessage%20a)%20=>%20a%20->%20m%20()][sendUpdate]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::sendNodesMetaUpdate%20::%20Map%20NodeLoc%20NodeMeta%20->%20Workspace%20->%20UUID%20->%20Maybe%20UUID][sendNodesMetaUpdate]] NodeEditor.Batch.Connector.Commands
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::requestCollaborationRefresh%20::%20ClientId%20->%20Workspace%20->%20IO%20()][requestCollaborationRefresh]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::collaborativeTouch%20::%20ClientId%20->%20%5BNodeLoc%5D%20->%20Workspace%20->%20IO%20()][collaborativeTouch]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::collaborativeModify%20::%20ClientId%20->%20%5BNodeLoc%5D%20->%20Workspace%20->%20IO%20()][collaborativeModify]]
            - [[file:node-editor/src/NodeEditor/Batch/Connector/Commands.hs::cancelCollaborativeTouch%20::%20ClientId%20->%20%5BNodeLoc%5D%20->%20Workspace%20->%20IO%20()][cancelCollaborativeTouch]]
        - [[file:lib/src/Common/Batch/Connector/Connection.hs::sendRequests%20::%20(MonadIO%20m,%20BinaryRequest%20a)%20=>%20%5BMessage%20a%5D%20->%20m%20()][sendRequests]]
      - [[file:node-editor/src/NodeEditor/Event/Loader.hs::withActiveConnection%20::%20(WebSocket%20->%20IO%20())%20->%20IO%20()][withActiveConnection]]
